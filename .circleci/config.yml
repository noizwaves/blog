version: 2.0
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1.409
    steps:
      - checkout
      - run:
          name: Restore packages
          command: dotnet restore
      - run:
          name: Install FAKE
          command: |
            dotnet tool install fake-cli -g
      - run:
          name: Install libsass
          command: |
            apt-get update
            apt-get install -y libsass-dev
      - run:
          name: Build
          command: dotnet build
      - run:
          name: Test
          command: dotnet test
      - run:
          name: FAKE Build
          command: /root/.dotnet/tools/fake build target Publish
      - run:
          name: Build static
          command: |
            dotnet run -p NoizwavesBlog -- static
      - persist_to_workspace:
          root: ./
          paths:
            - output

  deploy-staging:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install netlify-cli
          command: |
            cd /tmp/workspace
            npm install netlify-cli
      - deploy:
          name: Netlify Deploy
          command: |
            cd /tmp/workspace
            ./node_modules/.bin/netlify deploy --site $STAGING_NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=output

  deploy-production:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install netlify-cli
          command: |
            cd /tmp/workspace
            npm install netlify-cli
      - deploy:
          name: Netlify Deploy
          command: |
            cd /tmp/workspace
            ./node_modules/.bin/netlify deploy --site $PRODUCTION_NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=output

workflows:
  version: 2
  staging-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
      - deploy-staging:
          filters:
            branches:
              only:
                - develop
          requires:
            - build
  production-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy-production:
          filters:
            branches:
              only:
                - master
          requires:
            - build
  feature-branch-workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - development
